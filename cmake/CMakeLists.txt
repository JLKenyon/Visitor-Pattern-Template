CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
PROJECT(Visitor)

if(COMMAND cmake_policy)
    cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)


SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/Modules")  

SET(MYLIB "Visitor")

FIND_PACKAGE(Boost REQUIRED)
FIND_PACKAGE(GoogleTest)
FIND_PACKAGE(Threads)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/../bin/)
SET(LIBRARY_OUTPUT_PATH    ${CMAKE_SOURCE_DIR}/../lib/)
SET(SRC_DIR ${CMAKE_SOURCE_DIR}/../src/)
SET(APP_DIR ${CMAKE_SOURCE_DIR}/../apps/)
SET(INC_DIR ${CMAKE_SOURCE_DIR}/../include/)

#SET(CMAKE_CXX_FLAGS "-Wall -W -Wshadow -pedantic-errors -pedantic -Wextra -Werror -Wc++0x-compat")
SET(CMAKE_CXX_FLAGS "-Wall -W -Wshadow -pedantic-errors -pedantic -Wextra -Werror")

INCLUDE_DIRECTORIES(${INC_DIR}/../include/
                    /usr/include/python2.6
)

FILE(GLOB SRC_FILES  ${SRC_DIR}/*.cpp)
FILE(GLOB MAIN_FILES ${CMAKE_SOURCE_DIR}/../apps/*.cpp)
FILE(GLOB BIND_FILES ${CMAKE_SOURCE_DIR}/../bindings/*.cpp)

ADD_LIBRARY(${MYLIB} SHARED ${SRC_FILES})
ADD_LIBRARY(py${MYLIB} SHARED ${BIND_FILES})
TARGET_LINK_LIBRARIES(py${MYLIB} boost_python python2.6 ${MYLIB})


FOREACH(APPNAME ${MAIN_FILES})
    GET_FILENAME_COMPONENT(BASENAME ${APPNAME} NAME_WE)
    ADD_EXECUTABLE(${BASENAME} ${APPNAME})
    TARGET_LINK_LIBRARIES(${BASENAME} ${MYLIB})
ENDFOREACH(APPNAME ${MAIN_FILES})

MAKE_DIRECTORY(${LIBRARY_OUTPUT_PATH})
MAKE_DIRECTORY(${EXECUTABLE_OUTPUT_PATH})




ENABLE_TESTING()

SET(TEST_DIR ${CMAKE_SOURCE_DIR}/../tests/)
FILE(GLOB TEST_FILES  ${TEST_DIR}/standalone/*.cpp)
FILE(GLOB GUTEST_FILES  ${TEST_DIR}/gtest/*.cpp)
MAKE_DIRECTORY(${EXECUTABLE_OUTPUT_PATH}/tests)

FOREACH(TESTNAME ${TEST_FILES})
    GET_FILENAME_COMPONENT(TESTBASENAME ${TESTNAME} NAME_WE)
    ADD_EXECUTABLE( tests/${TESTBASENAME} ${TESTNAME})
    TARGET_LINK_LIBRARIES(tests/${TESTBASENAME} ${MYLIB})
    ADD_TEST(${TESTNAME} ${EXECUTABLE_OUTPUT_PATH}/tests/${TESTBASENAME})
ENDFOREACH(TESTNAME ${TEST_FILES})

ADD_EXECUTABLE( tests/gunit_tests "${GUTEST_FILES}")
TARGET_LINK_LIBRARIES(tests/gunit_tests 
    ${MYLIB} 
    ${GOOGLE_TEST_LIBRARY} 
    ${GOOGLE_TEST_LIBRARY_MAIN}
    ${CMAKE_THREAD_LIBS_INIT}
)

ADD_TEST(UNIT_TESTS ${EXECUTABLE_OUTPUT_PATH}/tests/gunit_tests)
ADD_TEST(PYTHON_TESTS env LD_LIBRARY_PATH=${CMAKE_SOURCE_DIR}/../lib PYTHONPATH=${CMAKE_SOURCE_DIR}/../lib nosetests ${CMAKE_SOURCE_DIR}/../tests/python/)

OPTION(BUILD_DOCUMENTATION "Build Documentation" ON)

IF(BUILD_DOCUMENTATION)
    ADD_CUSTOM_TARGET (Documentation ALL)
    ADD_CUSTOM_COMMAND(
        COMMAND   doxygen ${CMAKE_SOURCE_DIR}/Doxyfile > /dev/null
        TARGET    Documentation
    )
ENDIF(BUILD_DOCUMENTATION)

